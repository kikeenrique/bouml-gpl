class TabDialog
!!!144386.cpp!!!	TabDialog(inout u : UmlUseCase)
  setCaption(QCString("Properties of the use case '") + u->name() + "'");

  setCancelButton();
  
  QString cs = getenv("BOUML_CHARSET");
  
  Codec = 0;
  
  if (!cs.isEmpty() && ((Codec = QTextCodec::codecForName(cs)) == 0)) {
    QVBox * vbox = new QVBox(this);
    
    vbox->setMargin(5);
    (new QLabel("ERROR : No codec for '" + cs + "'", vbox))
      ->setAlignment(AlignCenter);
    
    addTab(vbox, "Use case wizard");
    setOkButton(QString::null);
  }
  else {
    for (unsigned i = 0; i != sizeof(Tabs)/sizeof(*Tabs); i += 1) {
      QVBox * vbox = new QVBox(this);
      
      vbox->setMargin(5);
      (new QLabel(QCString(Tabs[i].lbl) + u->name() + "'",
		  new QGroupBox(1, Horizontal, vbox)))
	->setAlignment(AlignCenter);
      this->*(Tabs[i]).a = new QMultiLineEdit(vbox);
      
      QCString v;
      
      if (u->propertyValue(Tabs[i].key, v))
	(this->*(Tabs[i]).a)->setText(toUnicode(v));
      
      addTab(vbox, Tabs[i].key);
    }
  }
!!!144642.cpp!!!	accept() : void
  for (unsigned i = 0; i != sizeof(Tabs)/sizeof(*Tabs); i += 1)
    uc->set_PropertyValue(Tabs[i].key, fromUnicode((this->*(Tabs[i]).a)->text()));
  UmlCom::bye();
  QTabDialog::accept();
!!!144770.cpp!!!	reject() : void
  UmlCom::bye();
  QTabDialog::reject();
!!!145410.cpp!!!	toUnicode(in str : str) : QString
  if (Codec == 0)
    return str;
  else if ((str == 0) || (*str == 0))
    return QString::null;
  else
    return Codec->toUnicode(str);
!!!145538.cpp!!!	latinize(inout s : QString) : void
  unsigned i = s.length();
  
  while (i != 0) {
    QChar c = s.at(--i);
    
    if (c.latin1() == 0) {
      if (c.unicode() == 8217)
	// special case for the pseudo ' returned by microsoft editors
	c = '\'';
      else
	c = ' ';
      s.replace(i, 1, &c, 1);
    }
  }
!!!145666.cpp!!!	fromUnicode(in s : QString) : string
  if (Codec == 0) {
    QString str = s;

    latinize(str);
    return QCString(str);
  }
  else if (s.isEmpty())
    return "";
  else
    return Codec->fromUnicode(s);
