class UmlBaseFragment
!!!207488.cpp!!!	read_() : void
  _name = UmlCom::read_string();
  _x = (int) UmlCom::read_unsigned();
  _y = (int) UmlCom::read_unsigned();
  _w = (int) UmlCom::read_unsigned();
  _h = (int) UmlCom::read_unsigned();

  unsigned n = UmlCom::read_unsigned();

  _compartments.resize(n);
  for (unsigned rank = 0; rank != n; rank += 1) {
    UmlFragmentCompartment * fc = new UmlFragmentCompartment();

    _compartments.insert(rank, fc);
    fc->init(this, rank, UmlCom::read_unsigned());
  }
  _compartments.setAutoDelete(TRUE);
!!!207488.java!!!	read_() : void
  _name = UmlCom.read_string();
  _x = UmlCom.read_unsigned();
  _y = UmlCom.read_unsigned();
  _w = UmlCom.read_unsigned();
  _h = UmlCom.read_unsigned();

  int n = UmlCom.read_unsigned();
  int rank;

  _compartments = new UmlFragmentCompartment[n];
  for (rank = 0; rank != n; rank += 1) {
    UmlFragmentCompartment fc = new UmlFragmentCompartment();

    _compartments[rank] = fc;
    fc.init(this, rank, UmlCom.read_unsigned());
  }
!!!207616.cpp!!!	get_container_(in x : int, in y : int, in w : int, in h : int, in fragments : UmlFragment) : UmlFragmentCompartment
  UmlFragmentCompartment * r = 0;
  int nf = fragments.count();
  int frank;

  for (frank = 0; frank != nf; frank += 1) {
    const UmlFragment * f = fragments[frank];

    if ((x > f->_x) && (y > f->_y) &&
        ((x + w) < (f->_x + f->_w)) && ((y + h) < (f->_y + f->_h))) {
      int y0 = f->_y;
      int nfc = f->_compartments.count();
      int fcrank;

      for (fcrank = 0; fcrank != nfc; fcrank += 1) {
        UmlFragmentCompartment * fc = f->_compartments[fcrank];

        if ((y > y0) &&
            ((y + h) < fc->b()) &&
            ((r == 0) || fc->smaller(r))) {
          r = fc;
          break;
        }
        y0 = fc->b();
      }
    }
  }
  return r;
!!!207616.java!!!	get_container_(in x : int, in y : int, in w : int, in h : int, in fragments : UmlFragment) : UmlFragmentCompartment
  UmlFragmentCompartment r = null;
  int nf = fragments.length;
  int frank;

  for (frank = 0; frank != nf; frank += 1) {
    UmlBaseFragment f = fragments[frank];

    if ((x > f._x) && (y > f._y) &&
        ((x + w) < (f._x + f._w)) && ((y + h) < (f._y + f._h))) {
      int y0 = f._y;
      int nfc = f._compartments.length;
      int fcrank;

      for (fcrank = 0; fcrank != nfc; fcrank += 1) {
        UmlBaseFragmentCompartment fc = f._compartments[fcrank];

        if ((y > y0) &&
            ((y + h) < fc.b()) &&
            ((r == null) || fc.smaller(r))) {
          r = f._compartments[fcrank];
          break;
        }
        y0 = fc.b();
      }
    }
  }
  return r;
!!!207744.cpp!!!	compute_container_(in fragments : UmlFragment) : void
  int rank = fragments.count();

  while (rank-- != 0) {
    UmlFragment * f = fragments[rank];
    UmlFragmentCompartment * fc = get_container_(f->_x, f->_y, f->_w, f->_h, fragments);

    if (fc != 0) {
      f->_container = fc;
      fc->add_contained_(f);
    }
  }
!!!207744.java!!!	compute_container_(in fragments : UmlFragment) : void
  int rank = fragments.length;

  while (rank-- != 0) {
    UmlBaseFragment f = fragments[rank];
    UmlFragmentCompartment fc = get_container_(f._x, f._y, f._w, f._h, fragments);

    if (fc != null) {
      f._container = fc;
      fc.add_contained_((UmlFragment) f);
    }
  }
